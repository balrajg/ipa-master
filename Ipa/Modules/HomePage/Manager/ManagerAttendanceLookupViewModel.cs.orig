using System;

using Xamarin.Forms;
using GalaSoft.MvvmLight;
using System.Collections.Generic;
using GalaSoft.MvvmLight.Command;
using System.Collections.ObjectModel;

namespace Mentor
{
	public class ManagerAttendanceLookupViewModel : ViewModelBase
	{
		private AttendanceListItemViewModel _SelectedItem;

		private ObservableCollection<ReporteeViewModel> _ReporteeAbsent;
		public ObservableCollection<ReporteeViewModel> ReporteeAbsent{
			set{ 
				if(Set(()=> ReporteeAbsent, ref _ReporteeAbsent, value)){
					RaisePropertyChanged(()=> ReporteeAbsent);
				}
			}
			get{ 
				return _ReporteeAbsent ?? (_ReporteeAbsent = new ObservableCollection<ReporteeViewModel> ());
			}
		}

		private ObservableCollection<ReporteeViewModel> _ReporteePresent;
		public ObservableCollection<ReporteeViewModel> ReporteePresent{
			set{ 
				if(Set(()=> ReporteePresent, ref _ReporteePresent, value)){
					RaisePropertyChanged(()=> ReporteePresent);
				}
			}
			get{ 
				return _ReporteePresent ?? (_ReporteePresent = new ObservableCollection<ReporteeViewModel> ());
			}
		}

		public string ClassDate{
			get{ 
				return _SelectedItem.ClassDate;
			}
		}

		public string ClassDay{
			get{ 
				return _SelectedItem.ClassDay;
			}
		}

		public string TotalPresent{
			get{
				return string.Format ("PRESENT ({0})", _SelectedItem.PresentList.Count);
			}
		}

		public string TotalAbsent {
			get {
				return string.Format ("ABSENT ({0})", _SelectedItem.AbsentList.Count);
			}
		}

		public bool CanShowPresent {
			get {
				return _SelectedItem.CanShowPresent;
			}
		}

		public bool CanShowAbsent {
			get {
				return _SelectedItem.CanShowAbsent;
			}
		}

		public ManagerAttendanceLookupViewModel (AttendanceListItemViewModel selectedItem,List<Reportee> reportee)
		{
			this._SelectedItem = selectedItem;
			GetReporteeAttendanceItemList (reportee);
		}

		private RelayCommand _BackBtnCmd;

		public RelayCommand BackBtnCmd {
			get { 
				return _BackBtnCmd ?? (_BackBtnCmd = new RelayCommand (() => {
					NavigationHandler.GlobalNavigator.Navigation.PopAsync();
				}));
			}
		}

		public void GetReporteeAttendanceItemList(List<Reportee> reporteeList)
		{
			foreach (var reportee in reporteeList) {
				ReporteeViewModel reporteeViewModel = new ReporteeViewModel (reportee);
<<<<<<< HEAD
				if ((_SelectedItem.AbsentList != null) && _SelectedItem.AbsentList.Exists (s => s.Equals (reportee.UserName))) {
					ReporteeAbsent.Add (reporteeViewModel);
				} else if ((_SelectedItem.PresentList != null) && _SelectedItem.PresentList.Exists (s => s.Equals (reportee.UserName))) {
=======
				if (_SelectedItem != null && _SelectedItem.AbsentList.Exists ( s => s.Equals (reportee.UserName) )) {
					ReporteeAbsent.Add (reporteeViewModel);
				} else if (_SelectedItem != null && _SelectedItem.PresentList.Exists ( s => s.Equals( reportee.UserName))) {
>>>>>>> 9f20232b0d57d09bd71ad2fe95aa382e8a10a3c4
					ReporteePresent.Add (reporteeViewModel);
				}
			}
		}
	}
}


